题目：p.292 #6  用Kruskal算法（贪心）找图的最小生成树。


检查程序：

1。注释行有1/3否？
2。使用了union和find函数否？
3。使用了min heap排序否？


运行程序：（要求提交*.exe）

0。输入只有一个结点的图
正确输出：一个结点（就是树了）
实际输出：

1。输入1个结点，1条边从该结点到它自己
正确输出：提示输入非法
实际输出：

2。输入2个结点1条边，但是这条边从结点1到它自己
正确输出：提示输入非法
实际输出：

3。输入2个结点，没有边
正确输出：No spanning tree
实际输出：

4。输入3个结点，1-2有一条边
正确输出：No spanning tree
实际输出：

5。输入3个结点，1和2之间有2条重复的边
正确输出：提示输入非法; 或者提示第2次输入将覆盖第1次的输入，然后输出No spanning tree
实际输出：

6。输入3个结点：0、1、2
   输入3条边：(0,1)=3, (0,2)=1, (1,2)=2
正确输出：(0,2) (1,2)
实际输出：

7。输入4个结点：0、1、2、3
   输入6条边：(0,1)=1, (0,2)=3, (0,3)=1, (1,2)=2, (1,3)=1, (2,3)=4
正确输出：(0,1) (0,3) (1,2) 或者 (0,1) (1,2) (1,3) 或者 (1,2) (1,3) (0,3)
实际输出：


关于友好性的检查：正确输入方法应该是要求输入结点个数，自动编号；然后输入边的个数，输入边。然后输出结果。

常见错误：（如果有犯就在该项后写“有”）
> 不接受输入，只有自己内部定义的测试用例。
> 只允许一次测试，输出后即结束运行。
> 不允许输入边，自动默认所有结点连通。
> 不允许用户按自己的顺序输入边，而是自动把所有边一条一条打出来问边长。
 （累死你，如果有1000个结点而只有1条边的话！）
> 同一条边输入2次以上，不加警告即覆盖了前次的输入。
> 要求输入整数时，输入字符导致崩溃。

其他问题：（如有请补充）
